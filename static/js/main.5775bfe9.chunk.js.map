{"version":3,"sources":["MatchSheet.tsx","contexts/ConfigContext.tsx","store/Store.js","App.tsx","index.tsx"],"names":["initialFights","id","team1","team2","suburi","kihon","kata","initialScore","name","score","MatchSheet","useState","fights","setFights","setScore","setResult","index","type","winTeam","newFights","console","log","team","newScore","map","t","i","sort","addScore","resetResult","resetTeam","removeScore","className","fight","color","onClick","ConfigContext","createContext","config","NumberOfTeams","Store","children","setConfig","Provider","value","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5775bfe9.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\n\ninterface Fight {\n    id: number,\n    team1:{\n        name: string,\n        color:string\n    },\n    team2:{\n        name: string,\n        color:string\n    },\n    suburi:string,\n    kihon:string,\n    kata:string  \n}\n\nlet initialFights : Fight[] = [\n    {\n        id: 1,\n        team1:{\n            \"name\":\"A\",\n            \"color\":\"red\"\n        },\n        team2:{\n            \"name\":\"B\",\n            \"color\":\"white\"\n        },\n        suburi:\"\",\n        kihon:\"\",\n        kata:\"\"\n    },\n    {\n        id: 2,\n        team1:{\n            \"name\":\"A\",\n            \"color\":\"red\"\n        },\n        team2:{\n            \"name\":\"C\",\n            \"color\":\"white\"\n        },\n        suburi:\"\",\n        kihon:\"\",\n        kata:\"\"\n    },\n    {\n        id: 3,\n        team1:{\n            \"name\":\"B\",\n            \"color\":\"red\"\n        },\n        team2:{\n            \"name\":\"C\",\n            \"color\":\"white\"\n        },\n        suburi:\"\",\n        kihon:\"\",\n        kata:\"\"\n    },\n    {\n        id: 4,\n        team1:{\n            \"name\":\"C\",\n            \"color\":\"red\"\n        },\n        team2:{\n            \"name\":\"D\",\n            \"color\":\"white\"\n        },\n        suburi:\"\",\n        kihon:\"\",\n        kata:\"\"\n    },\n    {\n        id: 5,\n        team1:{\n            \"name\":\"B\",\n            \"color\":\"red\"\n        },\n        team2:{\n            \"name\":\"D\",\n            \"color\":\"white\"\n        },\n        suburi:\"\",\n        kihon:\"\",\n        kata:\"\"\n    },\n];\n\nlet initialScore = [\n        {\n            name:\"A\",\n            score:0\n        },\n        {\n            name:\"B\",\n            score:0\n        },\n        {\n            name:\"C\",\n            score:0\n        },\n        {\n            name:\"D\",\n            score:0\n        },\n        {\n            name:\"E\",\n            score:0\n        }\n]    \n\n\n\nconst MatchSheet = () => {\n    const [fights, setFights ] = useState(initialFights);\n    const [score, setScore] = useState(initialScore);\n\n    const addScore = (team:string) => {\n        let newScore = [...score];\n\n        let index = -1;\n        newScore.map((t, i) => {\n            if(t.name === team) index = i;\n        });\n\n        newScore[index]= {...newScore[index], score: newScore[index].score+1};\n\n        newScore.sort((team1,team2)=>(team1.score>team2.score) ? -1 : 1)\n        console.log(newScore);\n        setScore(newScore);\n    }\n\n    const removeScore = (team:string) => {\n        let newScore = [...score];\n        let index = -1;\n        newScore.map((t, i) => {\n            if(t.name === team) index = i;\n        });\n        newScore[index]= {...newScore[index], score: newScore[index].score-1};\n\n        newScore.sort((team1,team2)=>(team1.score>team2.score) ? -1 : 1)\n        console.log(newScore);\n        setScore(newScore);\n    }\n\n    const setResult = (index:number, type: string, winTeam: string) => {\n        let newFights = [...fights];\n        newFights[index] = {...newFights[index], [type]:winTeam};\n        setFights(newFights);\n        console.log(winTeam)\n        addScore(winTeam);\n    }\n\n    const resetResult = (index:number, type: string, resetTeam:string) => {\n        let newFights = [...fights];\n        newFights[index] = {...newFights[index], [type]:\"\"};\n        setFights(newFights);\n        removeScore(resetTeam);\n    }\n\n    return (       \n        <div>\n            <table className=\"table table-striped\">\n                <thead>Score Board</thead>\n                <tbody>\n                    <tr>\n                        <th>Team</th>\n                        <th>Score</th>\n                    </tr>\n                    {\n                        score.map((t, index) => (\n                            <tr key={index+999}>\n                                <td>{t.name}</td>\n                                <td>{t.score}</td>\n                            </tr>\n                        ))                                                                                 \n                    }\n                </tbody>\n            </table>\n\n            <table className=\"table table-striped\">\n                <tbody>\n                    <tr>\n                        <th>#</th>\n                        <th>Versus</th>\n                        <th>Suburi</th>\n                        <th>Kihon</th>\n                        <th>Kata</th>\n                    </tr>\n                    {\n                        fights.map((fight,index)=>{\n                            let { id, team1, team2, suburi, kihon, kata } = fight;\n                            /*setResult(index,'suburi',team1.name) */\n                            let defaultResult = (<div><span style={{ backgroundColor: team1.color}} onClick={()=> setResult(index,'suburi',team1.name)}>{team1.name}</span>|<span style={{ backgroundColor: team2.color}}>{team2.name}</span></div>);\n\n                            return (\n                                <tr key={id}>\n                                    <td>{id}</td>\n                                    <td>{team1.name}-{team2.name}</td>\n                                    <td>{suburi===\"\" ? (<div><button className= {`btn btn-${team1.color==='red'?'danger':'light'}`} onClick={()=> setResult(index,'suburi',team1.name)}>{team1.name}</button><button  className= {`btn btn-${team2.color==='red'?'danger':'light'}`} onClick={()=> setResult(index,'suburi',team2.name)}  >{team2.name}</button></div>) : (<div><span>{suburi}  </span> <button className=\"btn btn-sm btn-outline-primary\" onClick={()=> resetResult(index,'suburi', suburi)}>reset</button></div>)}</td>\n                                    <td>{kihon===\"\" ? (<div><button className= {`btn btn-${team1.color==='red'?'danger':'light'}`} onClick={()=> setResult(index,'kihon',team1.name)}>{team1.name}</button><button className= {`btn btn-${team2.color==='red'?'danger':'light'}`} onClick={()=> setResult(index,'kihon',team2.name)} >{team2.name}</button></div>) : (<div><span>{kihon}  </span><button className=\"btn btn-sm btn-outline-primary\"  onClick={()=> resetResult(index,'kihon',kihon)}>reset</button></div>)}</td>\n                                    <td>{kata===\"\" ? (<div><button className= {`btn btn-${team1.color==='red'?'danger':'light'}`} onClick={()=> setResult(index,'kata',team1.name)}>{team1.name}</button><button className= {`btn btn-${team2.color==='red'?'danger':'light'}`} onClick={()=> setResult(index,'kata',team2.name)} >{team2.name}</button></div>) : (<div><span>{kata}</span><button className=\"btn btn-sm btn-outline-primary\"  onClick={()=> resetResult(index,'kata',kata)}>reset</button></div>)}</td>                                \n                                </tr>\n                            )                        \n                        })\n                    }                \n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default MatchSheet;","import React, { createContext } from 'react'\n import { IConfig } from '../types/Types'\n\nexport type ConfigContextPros = {\n    config: IConfig,\n    setConfig?: React.Dispatch<React.SetStateAction<IConfig>>\n}\n\nconst ConfigContext = createContext<ConfigContextPros>({ \n    config: { NumberOfTeams : 5 }\n});\n\nexport default ConfigContext ;","import React, { useState, useMemo } from 'react';\r\nimport ConfigContext from '../contexts/ConfigContext';\r\nimport { IConfig } from '../types/Types'\r\n\r\nconst Store = ({ children }) => {\r\n    const [ config, setConfig ] = useState({\r\n        NumberOfTeams : 5      \r\n    }); \r\n\r\n    // const providerConfig = useMemo(() => ({config, setConfig}),  [ config, setConfig ]);    \r\n\r\n    return (\r\n    <ConfigContext.Provider value={{ config, setConfig }}>\r\n      {children}\r\n    </ConfigContext.Provider>\r\n    );\r\n};\r\n\r\nexport default Store;","\nimport React from 'react'\nimport Setup from './Setup'\nimport MatchSheet from './MatchSheet'\nimport Store from './store/Store'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Store>\n      <div className=\"container\">\n        <div className=\"row align-items-center justify-content-center\">          \n          <div className=\"col-6\">\n            <h1>Inoue Hai Kihon Competition</h1>            \n            <MatchSheet />\n          </div> \n        </div>\n      </div>\n    </Store>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}